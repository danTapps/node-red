[{"id":"45424774.052448","type":"tab","label":"Flow 2","disabled":false,"info":""},{"id":"dc14a65c.3701d8","type":"inject","z":"45424774.052448","name":"get data","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":108,"y":141,"wires":[["681a2dc.8dc30d4"]]},{"id":"681a2dc.8dc30d4","type":"http request","z":"45424774.052448","name":"","method":"GET","ret":"txt","paytoqs":false,"url":"http://192.168.10.153/hub/backup","tls":"","proxy":"","x":276,"y":140,"wires":[["5ffb2d8.1b69dd4"]]},{"id":"5ffb2d8.1b69dd4","type":"cheerio-function","z":"45424774.052448","name":"parse html cheerio","func":"const tableSelector = '#backup-table'\n\n//const cheerio = global.get('cheerio')\n//const $ = cheerio.load(msg.payload)\nconst options = {\n    rowForHeadings: 0,  // extract th cells from this row for column headings (zero-based)\n    ignoreHeadingRow: true, // Don't tread the heading row as data\n    ignoreRows: [],\n}\nconst rowEntries = []\nconst columnHeadings = []\n\n\n$(tableSelector).each(function(i, table) {\n    node.log(\"Something happened\");\n\n    var trs = $(table).find('tr')\n    \n    // Set up the column heading names\n    getColHeadings( $(trs[options.rowForHeadings]) )\n\n    // Process rows for data\n    $(table).find('tr').each(processRow)\n})\n\nif (rowEntries.length === 0)\n    return null;\n\nmsg.payload = {\n    fileName: rowEntries[rowEntries.length-1].Name\n}\n\nreturn msg\n\nfunction getColHeadings(headingRow) {\n    const alreadySeen = {}\n    \n    $(headingRow).find('th').each(function(j, cell) {\n        let tr = $(cell).text().trim()\n        \n        if ( alreadySeen[tr] ) {\n            let suffix = ++alreadySeen[tr]\n            tr = `${tr}_${suffix}`\n        } else {\n            alreadySeen[tr] = 1\n        }\n        \n        columnHeadings.push(tr)\n    })\n}\n\nfunction processRow(i, row) {\n    const rowJson = {}\n    \n    if ( options.ignoreHeadingRow && i === options.rowForHeadings ) return\n    // TODO: Process options.ignoreRows\n    \n    $(row).find('td').each(function(j, cell) {\n        rowJson[ columnHeadings[j] ] = $(cell).text().trim()\n    })\n    \n    // Skip blank rows\n    if (JSON.stringify(rowJson) !== '{}') rowEntries.push(rowJson)\n}\n","outputs":1,"noerr":0,"x":462.5,"y":137,"wires":[["9a78be62.d051d"]]},{"id":"9a78be62.d051d","type":"http request","z":"45424774.052448","name":"","method":"GET","ret":"bin","paytoqs":true,"url":"http://192.168.10.153/hub/backupDB?","tls":"","proxy":"","authType":"basic","x":268.5,"y":259,"wires":[["8e274a2.c00ccb8"]]},{"id":"a81ffa29.327a08","type":"file","z":"45424774.052448","name":"","filename":"","appendNewline":false,"createDir":true,"overwriteFile":"true","encoding":"binary","x":571.5,"y":258,"wires":[[]]},{"id":"8e274a2.c00ccb8","type":"string","z":"45424774.052448","name":"","methods":[{"name":"strip","params":[{"type":"str","value":"attachment; filename="}]},{"name":"prepend","params":[{"type":"str","value":"/var/log/"}]}],"prop":"headers.content-disposition","propout":"filename","object":"msg","objectout":"msg","x":424.5,"y":257,"wires":[["a81ffa29.327a08"]]}]
